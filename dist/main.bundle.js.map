{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent}\n];\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [ RouterModule.forRoot(routes) ]\n})\nexport class AppRoutingModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule,\n  MatInputModule,\n  MatCardModule,\n  MatListModule,\n  MatIconModule} from '@angular/material';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent\n  ],\n  imports: [\n    MatButtonModule,\n    MatInputModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\" style=\\\"margin-top:30px;\\\">\\n       \\n        <mat-card class=\\\"example-card\\\">\\n            <h4>Add your notes</h4>\\n            <hr>\\n        <form class=\\\"example-form\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput [(ngModel)]=\\\"title\\\" name=\\\"title\\\" placeholder=\\\"Notes Title\\\" value=\\\"Sushi\\\">\\n            </mat-form-field>\\n          \\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <textarea matInput [(ngModel)]=\\\"desc\\\" name=\\\"desc\\\"  placeholder=\\\"Notes Description\\\"></textarea>\\n            </mat-form-field>\\n           \\n                <button mat-raised-button color=\\\"accent\\\" *ngIf=\\\"!updateState\\\" (click)=\\\"add(title,desc);\\\">Add Note</button>\\n                <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"updateState\\\" (click)=\\\"updateNotes(title,desc);\\\">Update Note</button>\\n          </form>\\n        </mat-card>\\n    </div>\\n\\n    <div class=\\\"col-md-6 offset-md-3\\\" style=\\\"margin-top:30px;\\\">\\n        <mat-card class=\\\"example-card\\\">\\n            <mat-nav-list>\\n                <mat-list-item *ngFor=\\\"let notes of notesArray\\\">\\n       \\n                  <h3 matLine> {{notes.title}} </h3>\\n                  <p matLine>\\n                    <span> {{notes.desc}} </span>\\n                  </p>\\n                  <p class=\\\"text-right\\\" matLine><button mat-button color=\\\"warn\\\" (click)=\\\"delete(notes.id)\\\">\\n                      Delete\\n                   </button>\\n                   <button mat-button color=\\\"warn\\\" (click)=\\\"update(notes.id,notes.title,notes.desc)\\\">\\n                      Update\\n                   </button></p>\\n                </mat-list-item>\\n              </mat-nav-list>\\n        </mat-card>\\n    </div>\\n     \\n  </div>\\n  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  notesArray:any=[];\n  title:string;\n  desc:string;\n  updateid:any;\n  updateState:boolean=false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  add(title : string,desc: string){\n    this.notesArray.push({\"id\":this.notesArray.length + 1,\"title\":title,\"desc\":desc});\n    this.title =\"\";\n    this.desc =\"\";\n  }\n  updateNotes(title:string,desc:string){\n    this.notesArray[this.updateid-1].title = title;\n    this.notesArray[this.updateid-1].desc = desc;\n    this.updateState = false;\n  }\n  delete(id){\n    this.notesArray.splice(id-1, 1);\n  }\n  update(id: number,title:string,desc:string){\n    this.updateState=true;\n    this.updateid = id;\n    this.title = title;\n    this.desc = desc;\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 offset-md-4\\\" style=\\\"margin-top:150px;\\\">\\n      <!-- <div class=\\\"card\\\" >\\n        <img class=\\\"card-img-top\\\" src=\\\"http://www.assaybiotech.com/images/uploaded/1386077226banner-login.jpg\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n         \\n        </div>\\n      </div> -->\\n\\n\\n\\n      <mat-card class=\\\"example-card\\\">\\n        <mat-card-header>\\n          \\n          <mat-card-title>Welcome to <em>Your's Note</em></mat-card-title>\\n          <mat-card-subtitle>Login with your credentials</mat-card-subtitle>\\n        </mat-card-header>\\n       \\n        <mat-card-content>\\n          <form class=\\\"example-form\\\">\\n            <div class=\\\"form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" matInput placeholder=\\\"Login ID\\\">\\n                  </mat-form-field>\\n              </div>\\n         \\n              <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" matInput placeholder=\\\"Password\\\">\\n              </mat-form-field>\\n              </div>\\n              <div class=\\\"text-right\\\">\\n                  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">Sign In</button>\\n              </div>\\n              \\n        </form>\\n        </mat-card-content>\\n       \\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username:string;\n  password:string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n  login(){\n    ///alert(\"hello\")\n    if(this.username === \"admin\" && this.password === \"password\")\n    this.router.navigate(['/dashboard']);\n    else\n    alert(\"Invalid ID / Password\")\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}